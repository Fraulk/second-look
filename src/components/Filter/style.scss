.Filter {
	position: fixed;
	z-index: 1;
	left: 0;
	right: 0;
	display: flex;
	justify-content: center;
	pointer-events: none;

	.filter-bar {
		position: relative;
		margin-top: 1rem;
		// reset input's css
		input {
			all: unset;
			pointer-events: all;
		}

		input {
			width: 15rem;
			transform: translateY(-3.5rem);
			padding: .5rem 1rem .75rem;
			background-color: #d0d0d0a4;
			border-radius: 25px;
			font-size: 1.2rem;
			line-height: 1.2rem;
			transition: outline .2s cubic-bezier(0.4, 0.0, 0.2, 1), width .2s cubic-bezier(0.4, 0.0, 0.2, 1),
				transform .2s cubic-bezier(0.4, 0.0, 0.2, 1);
		}

		input:hover {
			transform: translateY(-2.5rem);
			background-color: #ffffffcf;
			cursor: pointer;
		}

		input:focus,
		&:focus input {
			position: relative;
			color: black;
			width: 25rem;
			transform: translateY(0);
			background-color: white;
			box-shadow: 0 3px 4px 0 rgba(0, 0, 0, 0.14), 0 3px 3px -2px rgba(0, 0, 0, 0.12),
				0 1px 8px 0 rgba(0, 0, 0, 0.20);
			outline: 3px solid #d00045;
			cursor: auto;
			z-index: 3;
		}

		.shortcuts {display: none;}
		input:focus + .shortcuts,
		&:focus .shortcuts {
			position: absolute;
			top: .8rem;
			right: 1rem;
			display: flex;
			gap: .25rem;
			color: black;
			z-index: 4;
			
			.key {
				padding: 4px 6px 6px;
				background-color: #dbdbdb;
				outline: 1px solid #b9b9b9;
				font-size: .9rem;
				line-height: .9rem;
			}
		}

		.autocomplete-search {
			display: none;
			// transform: translateY(-10rem);
			transition: transform .2s cubic-bezier(0.4, 0.0, 0.2, 1);
		}

		input:focus ~ .autocomplete-search,
		&:focus .autocomplete-search {
			position: relative;
			display: block;
			color: black;
			// width: 25rem;
			padding: .5rem 0 .5rem;
			padding-top: 2.25rem;
			transform: translateY(-2rem);
			background-color: white;
			border-radius: 0 0 25px 25px;
			box-shadow: 0 3px 4px 0 rgba(0, 0, 0, 0.14), 0 3px 3px -2px rgba(0, 0, 0, 0.12),
				0 1px 8px 0 rgba(0, 0, 0, 0.20);
			z-index: 2;
			pointer-events: all;
			overflow: hidden;
			animation: slideInFromTop .3s cubic-bezier(0.4, 0.0, 0.2, 1);

			.autocomplete-element {
				padding: 4px 1rem;
				cursor: pointer;
				transition: background-color .2s cubic-bezier(0.4, 0.0, 0.2, 1);
			}

			.autocomplete-element:hover {
				background-color: #cacacab1;
			}
		}

		.cross { display: none; }
		input:focus ~ .cross,
		&:focus .cross {
			position: absolute;
			top: 1px;
			right: 0;
			display: block;
			font-size: 1.2rem;
			line-height: 1rem;
			padding: 1rem 1rem 17px 2rem;
			color: black;
			// width: 25rem;
			transform: translateX(3rem);
			background-color: white;
			border-radius: 0 25px 25px 0;
			box-shadow: 0 3px 4px 0 rgba(0, 0, 0, 0.14), 0 3px 3px -2px rgba(0, 0, 0, 0.12),
				0 1px 8px 0 rgba(0, 0, 0, 0.20);
			z-index: 2;
			pointer-events: all;
			overflow: hidden;
			cursor: pointer;
			animation: slideInFromLeft .3s cubic-bezier(0.4, 0.0, 0.2, 1);
		}

		@keyframes slideInFromLeft {
			0% {
				transform: translateX(0);
			}
			100% {
				transform: translateX(3rem);
			}
		}

		@keyframes slideInFromTop {
			0% {
				padding-top: 0;
			}
			100% {
				padding-top: 2.25rem;
			}
		}
	}
}
